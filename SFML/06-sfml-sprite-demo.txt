#include "Sprite.h"

sf::Sprite display_sprite(const char* filePath, float x, float y)
{
	// Load texture
	static sf::Texture texture;
	if (not texture.loadFromFile(filePath))
	{
		std::cout << "Unable to produce sprite.\n";
	} 
	// Load sprite
	// Sprite is like a pointer, which points to a Texture. If Texture is not static, when deallocated, the texture would be destroyed and hence a white image is displayed
	sf::Sprite sprite(texture);
	sprite.setPosition(0.f,0.f);
	sprite.move(sf::Vector2f(x, y));

	return sprite;
}

void display_sprite()
{
	sf::RenderWindow window(sf::VideoMode(1000,1000), "Nyan Cat", sf::Style::Default);

	// Init my Nyan Cat
	const char* filePath = "C:\\Users\\benja\\OneDrive\\Desktop\\RafflesLearningLab\\cat_face.png";

	// Init variables
	int count = 0;
	bool move_right = 1, move_left = 0;
	float x = 0.f, y = 0.f;

	window.setFramerateLimit(60);
	window.clear(sf::Color::Black);
	window.display();

	while (window.isOpen())
	{
		sf::Event evnt;
		while (window.pollEvent(evnt))
		{
			if (evnt.type == sf::Event::Closed)
			{
				window.close();
			}
		}

		// Algo for moving Sprite
		// Let me experiment with Sine wave
		if (count == 100) { count = 0; }

		if (count < 100 && move_right == 1)
		{
			// If square hits the right corner, we stop moving right
			if (x < 900.f)
			{
				x += 100.f;
			}
			// And we start to move left
			else if (x == 900.f)
			{
				move_right = 0;
				move_left = 1;
				y += 100.f;
			}
		}

		else if (count < 100 && move_left == 1)
		{
			// If square hits right corner, we stop moving left
			if (x > 0.f)
			{
				x -= 100.f;
			}
			// And we start moving right
			else if (x == 0.f)
			{
				move_right = 1;
				move_left = 0;
				y += 100.f;
			}
		}

		if (count < 100 && y == 1000.f)
		{
			x = 0.f;
			y = 0.f;
		}

		window.clear(sf::Color::Black);
		window.draw(display_sprite(filePath, x, y));
		window.display();

		count++;
	}
}
